{"version":3,"sources":["reportWebVitals.js","Components/AddCategory.js","Components/GiftGridItem.js","helpers/getGift.js","Components/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AddCategory","setCateg","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","GiftGridItem","id","title","url","console","log","className","src","alt","width","style","padding","getGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","img","images","downsized_medium","GiftGrid","loading","state","setState","useEffect","setTimeout","useFectchGifs","gif","GiftExpertApp","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"sKAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,qBC8BCQ,EAlCK,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAClB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAS,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACjCN,EAAc,MAMlB,SACI,8BACI,uBACIO,KAAO,OACPC,MAAUT,EACVU,SApBS,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,e,QCLlBG,EAAe,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAEtC,OADAC,QAAQC,IAAIJ,EAAIC,EAAOC,GAEnB,sBAAKG,UAAU,yCAAf,UACI,qBAAKC,IAAOJ,EAAKK,IAAKN,EAAOO,MAAO,IAAKC,MAAO,CAACC,QAAS,MAC1D,4BAAIT,Q,uBCPHU,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbX,EADa,iDACoCY,UAAUF,GAD9C,+DAEIG,MAAMb,GAFV,cAEbc,EAFa,gBAGIA,EAASC,OAHb,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHrB,GAAIqB,EAAIrB,GACRC,MAAOoB,EAAIpB,MACXC,IAAG,UAAEmB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBrB,QAK1CC,QAAQC,IAAIe,GAdO,kBAeZA,GAfY,4CAAH,sDCKPK,EAAW,SAAC,GAAoB,IAAjBZ,EAAgB,EAAhBA,SAGxB,ECLyB,SAACA,GAC1B,MAA0B1B,mBAAS,CAC/BgC,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OAnBAC,qBAAU,WACNjB,EAAQC,GACHlC,MAAK,SAAA2C,GACFQ,YAAW,WACPF,EAAS,CACLT,KAAMG,EACNI,SAAS,MAEd,UAEZ,IASIC,EDpBwBI,CAAclB,GAAjCU,EAAZ,EAAOJ,KAAaO,EAApB,EAAoBA,QAMpB,OACI,qCACA,6BAAKb,IACHa,GAAW,yCACb,qBAAKpB,UAAU,YAAf,SACKiB,EAAOF,KAAK,SAAAW,GAAG,OACR,cAAC,EAAD,eAESA,GADAA,EAAI/B,aEYlBgC,EA7BO,WAElB,MAAoC9C,mBAAS,CAAC,mBAA9C,mBAAO+C,EAAP,KAAmBC,EAAnB,KAMA,OACI,qCACI,6CACA,cAAC,EAAD,CAAajD,SAAYiD,IACzB,uBAEA,6BAEQD,EAAWb,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CACIA,SAAaA,GACLA,YCjBpCuB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1B/D,M","file":"static/js/main.9a129328.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCateg}) => {\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n    const handleInputValue = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2){\r\n            setCateg(cate => [inputValue, ...cate]);\r\n            setInputValue(\"\");\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <div>\r\n                <input \r\n                    type = \"text\"\r\n                    value = { inputValue }\r\n                    onChange = { handleInputValue }\r\n                />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCateg: PropTypes.func.isRequired \r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\n\r\nexport const GiftGridItem = ( {id, title, url} ) => {\r\n    console.log(id, title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src = {url} alt={title} width={250} style={{padding: 10}}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=QS3zXCGtVg3IBq8EaxGv9x3mZg3htYVs`;\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    //console.log(gifs);\r\n    console.log(gifs)\r\n    return gifs;\r\n}","import React from 'react'\r\nimport {GiftGridItem} from './GiftGridItem'\r\n\r\nimport { useFectchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GiftGrid = ( { category } ) => {\r\n    \r\n    // const [images, setImages] = useState([]);\r\n    const {data:images, loading} = useFectchGifs(category);\r\n    // useEffect(() => {\r\n    //     getGifs(category)\r\n    //         .then( imgs => setImages(imgs))\r\n    // }, [category])\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        { loading && <h1>Loading</h1> }\r\n        <div className=\"card-grid\">\r\n            {images.map( gif => (\r\n                    <GiftGridItem \r\n                        key={gif.id}\r\n                        {... gif}\r\n                    />\r\n                ))}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGift';\r\n\r\nexport const useFectchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(img => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: img,\r\n                        loading: false\r\n                    })\r\n                }, 3000)\r\n            })\r\n    }, [])\r\n\r\n    // setTimeout(() => {\r\n    //     setState({\r\n    //         data: [1,2,3,4],\r\n    //         loading: false\r\n    //     })\r\n    // }, 3000)\r\n\r\n    return state;\r\n}","import { useState } from \"react\";\r\nimport AddCategory from \"./Components/AddCategory\";\r\nimport { GiftGrid } from \"./Components/GiftGrid\";\r\n\r\nconst GiftExpertApp = () => {\r\n    //const categories = [\"categ 1\", \"categ 2\", \"categ 3\"]\r\n    const [categories, setCategories] = useState([\"Rick and Morty\"])\r\n\r\n    // const handleCategories = () => {\r\n    //     setCategories([...categories, \"categ 4\"]);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>Gift Expert</h2>\r\n            <AddCategory setCateg = {setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GiftGrid \r\n                            category = { category }\r\n                            key = { category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport GiftExpertApp from './GiftExpertApp';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}